/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    sitenav: Sitenav;
  };
  globalsSelect: {
    sitenav: SitenavSelect<false> | SitenavSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  absoluteNav?: boolean | null;
  slug?: string | null;
  sections?:
    | (
        | HeroBlock
        | LogoTrackBlock
        | FeaturedVideoBlock
        | IconGridBlock
        | LargeVideoCtaBlock
        | ReviewSliderBlock
        | StatGridBlock
        | PreFooterCtaBlock
      )[]
    | null;
  seo: {
    title?: string | null;
    description?: string | null;
    publishDate?: string | null;
    siteMapPriority?: number | null;
    geo?: {
      name?: string | null;
      /**
       * @minItems 2
       * @maxItems 2
       */
      pin?: [number, number] | null;
    };
    category?: string | null;
    robots?: {
      noindex?: boolean | null;
      nofollow?: boolean | null;
      nocache?: boolean | null;
    };
    twitter: {
      title?: string | null;
      description?: string | null;
      image: Media;
    };
    openGraph: {
      title?: string | null;
      description?: string | null;
      image: Media;
      alt?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlock".
 */
export interface HeroBlock {
  headline: string;
  blurb?: string | null;
  bgVideoSrc: string;
  primaryCta: {
    href: string;
    innerText: string;
  };
  salesVideoCtaInnerText?: string | null;
  salesVideoSrc?: string | null;
  section: {
    sectionId: string;
    paddingTop: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
    paddingBottom: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'Hero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LogoTrackBlock".
 */
export interface LogoTrackBlock {
  blurb?: string | null;
  logos?:
    | {
        src: Media;
        id?: string | null;
      }[]
    | null;
  section: {
    sectionId: string;
    paddingTop: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
    paddingBottom: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'LogoTrack';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedVideoBlock".
 */
export interface FeaturedVideoBlock {
  logo?: Media;
  headline?: string | null;
  blurb?: string | null;
  videoSrc?: string | null;
  videoPreviewSrc?: string | null;
  section: {
    sectionId: string;
    paddingTop: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
    paddingBottom: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'FeaturedVideo';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IconGridBlock".
 */
export interface IconGridBlock {
  standardHeadline: {
    subHeadline: string;
    headline: string;
  };
  gridCells: {
    icon: Media;
    headline: string;
    blurb: string;
    id?: string | null;
  }[];
  section: {
    sectionId: string;
    paddingTop: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
    paddingBottom: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'IconGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LargeVideoCtaBlock".
 */
export interface LargeVideoCtaBlock {
  headline?: string | null;
  blurb?: string | null;
  bgVideoSource?: string | null;
  cta: {
    href: string;
    innerText: string;
  };
  section: {
    sectionId: string;
    paddingTop: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
    paddingBottom: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'LargeVideoCta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReviewSliderBlock".
 */
export interface ReviewSliderBlock {
  standardHeadline: {
    subHeadline: string;
    headline: string;
  };
  videoSrc?: string | null;
  videoPreviewSrc?: string | null;
  reviews: {
    review: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    firstName: string;
    lastName: string;
    logo: Media;
    profile: Media;
    id?: string | null;
  }[];
  section: {
    sectionId: string;
    paddingTop: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
    paddingBottom: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'ReviewSlider';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StatGridBlock".
 */
export interface StatGridBlock {
  stats: {
    number: number;
    prefix?: string | null;
    suffix?: string | null;
    blurb?: string | null;
    id?: string | null;
  }[];
  section: {
    sectionId: string;
    paddingTop: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
    paddingBottom: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'StatGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PreFooterCtaBlock".
 */
export interface PreFooterCtaBlock {
  headline?: string | null;
  blurb?: string | null;
  backgroundImg: Media;
  cta: {
    href: string;
    innerText: string;
  };
  section: {
    sectionId: string;
    paddingTop: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
    paddingBottom: 'none' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'PreFooterCta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  absoluteNav?: T;
  slug?: T;
  sections?:
    | T
    | {
        Hero?: T | HeroBlockSelect<T>;
        LogoTrack?: T | LogoTrackBlockSelect<T>;
        FeaturedVideo?: T | FeaturedVideoBlockSelect<T>;
        IconGrid?: T | IconGridBlockSelect<T>;
        LargeVideoCta?: T | LargeVideoCtaBlockSelect<T>;
        ReviewSlider?: T | ReviewSliderBlockSelect<T>;
        StatGrid?: T | StatGridBlockSelect<T>;
        PreFooterCta?: T | PreFooterCtaBlockSelect<T>;
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        publishDate?: T;
        siteMapPriority?: T;
        geo?:
          | T
          | {
              name?: T;
              pin?: T;
            };
        category?: T;
        robots?:
          | T
          | {
              noindex?: T;
              nofollow?: T;
              nocache?: T;
            };
        twitter?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
            };
        openGraph?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
              alt?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlock_select".
 */
export interface HeroBlockSelect<T extends boolean = true> {
  headline?: T;
  blurb?: T;
  bgVideoSrc?: T;
  primaryCta?:
    | T
    | {
        href?: T;
        innerText?: T;
      };
  salesVideoCtaInnerText?: T;
  salesVideoSrc?: T;
  section?:
    | T
    | {
        sectionId?: T;
        paddingTop?: T;
        paddingBottom?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LogoTrackBlock_select".
 */
export interface LogoTrackBlockSelect<T extends boolean = true> {
  blurb?: T;
  logos?:
    | T
    | {
        src?: T;
        id?: T;
      };
  section?:
    | T
    | {
        sectionId?: T;
        paddingTop?: T;
        paddingBottom?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedVideoBlock_select".
 */
export interface FeaturedVideoBlockSelect<T extends boolean = true> {
  logo?: T;
  headline?: T;
  blurb?: T;
  videoSrc?: T;
  videoPreviewSrc?: T;
  section?:
    | T
    | {
        sectionId?: T;
        paddingTop?: T;
        paddingBottom?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IconGridBlock_select".
 */
export interface IconGridBlockSelect<T extends boolean = true> {
  standardHeadline?:
    | T
    | {
        subHeadline?: T;
        headline?: T;
      };
  gridCells?:
    | T
    | {
        icon?: T;
        headline?: T;
        blurb?: T;
        id?: T;
      };
  section?:
    | T
    | {
        sectionId?: T;
        paddingTop?: T;
        paddingBottom?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LargeVideoCtaBlock_select".
 */
export interface LargeVideoCtaBlockSelect<T extends boolean = true> {
  headline?: T;
  blurb?: T;
  bgVideoSource?: T;
  cta?:
    | T
    | {
        href?: T;
        innerText?: T;
      };
  section?:
    | T
    | {
        sectionId?: T;
        paddingTop?: T;
        paddingBottom?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReviewSliderBlock_select".
 */
export interface ReviewSliderBlockSelect<T extends boolean = true> {
  standardHeadline?:
    | T
    | {
        subHeadline?: T;
        headline?: T;
      };
  videoSrc?: T;
  videoPreviewSrc?: T;
  reviews?:
    | T
    | {
        review?: T;
        firstName?: T;
        lastName?: T;
        logo?: T;
        profile?: T;
        id?: T;
      };
  section?:
    | T
    | {
        sectionId?: T;
        paddingTop?: T;
        paddingBottom?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StatGridBlock_select".
 */
export interface StatGridBlockSelect<T extends boolean = true> {
  stats?:
    | T
    | {
        number?: T;
        prefix?: T;
        suffix?: T;
        blurb?: T;
        id?: T;
      };
  section?:
    | T
    | {
        sectionId?: T;
        paddingTop?: T;
        paddingBottom?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PreFooterCtaBlock_select".
 */
export interface PreFooterCtaBlockSelect<T extends boolean = true> {
  headline?: T;
  blurb?: T;
  backgroundImg?: T;
  cta?:
    | T
    | {
        href?: T;
        innerText?: T;
      };
  section?:
    | T
    | {
        sectionId?: T;
        paddingTop?: T;
        paddingBottom?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sitenav".
 */
export interface Sitenav {
  id: number;
  links: (SiteNavLinkBlock | SiteNavImageMenuBlock)[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SiteNavLinkBlock".
 */
export interface SiteNavLinkBlock {
  link: {
    href: string;
    innerText: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'SiteNavLink';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SiteNavImageMenuBlock".
 */
export interface SiteNavImageMenuBlock {
  label?: string | null;
  headline?: string | null;
  blurb?: string | null;
  image: Media;
  links?:
    | {
        title?: string | null;
        blurb?: string | null;
        href?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'SiteNavImageMenu';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sitenav_select".
 */
export interface SitenavSelect<T extends boolean = true> {
  links?:
    | T
    | {
        SiteNavLink?: T | SiteNavLinkBlockSelect<T>;
        SiteNavImageMenu?: T | SiteNavImageMenuBlockSelect<T>;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SiteNavLinkBlock_select".
 */
export interface SiteNavLinkBlockSelect<T extends boolean = true> {
  link?:
    | T
    | {
        href?: T;
        innerText?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SiteNavImageMenuBlock_select".
 */
export interface SiteNavImageMenuBlockSelect<T extends boolean = true> {
  label?: T;
  headline?: T;
  blurb?: T;
  image?: T;
  links?:
    | T
    | {
        title?: T;
        blurb?: T;
        href?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}